Sys.setenv(RENV_CONFIG_AUTOLOADER_ENABLED = FALSE)
# Instale os pacotes básicos para o Quarto funcionar:
install.packages(c(
"rmarkdown",
"knitr",
"tidyverse",
"plotly",
"htmltools"
))
# Definir o caminho do cache
cache_path <- "C:/Users/Weback/OneDrive - Grupo Marista/FAE Business School/PAIC 2025-26/renv_cache_global"
# Criar a pasta
dir.create(cache_path, recursive = TRUE, showWarnings = FALSE)
# Verificar se foi criada
if (dir.exists(cache_path)) {
cat("✅ Pasta criada com sucesso em:\n", cache_path, "\n")
} else {
cat("❌ Erro ao criar pasta\n")
}
# Configurar a variável de ambiente
Sys.setenv(RENV_PATHS_CACHE = cache_path)
# Verificar se foi configurado corretamente
cat("Cache configurado em:\n", Sys.getenv("RENV_PATHS_CACHE"), "\n")
# Abrir o arquivo .Renviron para edição
usethis::edit_r_environ()
# ============================================
# CRIAR ARQUIVOS DE AMBIENTE - PAIC FAE
# ============================================
cat("\n🔧 Criando arquivos de configuração...\n\n")
# 1. Criar .Renviron (apenas config do renv)
cat('# .Renviron - Configurações de desenvolvimento
RENV_PATHS_CACHE=C:/Users/Weback/OneDrive - Grupo Marista/FAE Business School/PAIC 2025-26/renv_cache_global
', file = ".Renviron")
cat("✅ .Renviron criado\n")
# 2. Criar .Renviron.local (credenciais)
cat('# .Renviron.local - CREDENCIAIS (NÃO versionar!)
# Banco de Dados CX Analytics
CX_HOST=172.23.27.20
CX_PORT=5432
CX_DBNAME=cx_analytics
CX_USER=rodrigo.ozon
CX_PASSWORD=COLOQUE_SUA_SENHA_AQUI
# IMPORTANTE: Edite e substitua a senha acima!
', file = ".Renviron.local")
cat("✅ .Renviron.local criado\n")
# 3. Criar .Renviron.template (para equipe)
cat('# .Renviron.template - Template para a equipe
# Configuração do renv
RENV_PATHS_CACHE=C:/Users/SEU_USUARIO/OneDrive - Grupo Marista/FAE Business School/PAIC 2025-26/renv_cache_global
# Credenciais do Banco de Dados
CX_HOST=172.23.27.20
CX_PORT=5432
CX_DBNAME=cx_analytics
CX_USER=seu_usuario
CX_PASSWORD=sua_senha
# Instruções:
# 1. Copie para .Renviron.local
# 2. Preencha com suas credenciais reais
# 3. NUNCA commite .Renviron.local!
', file = ".Renviron.template")
cat("✅ .Renviron.template criado\n")
# 4. Criar .Rprofile (carregamento automático)
cat('# .Rprofile - Configuração do projeto
source("renv/activate.R")
# Carregar configurações
if (file.exists(".Renviron")) {
readRenviron(".Renviron")
}
if (file.exists(".Renviron.local")) {
readRenviron(".Renviron.local")
message("✅ Credenciais carregadas")
} else {
warning("⚠️  .Renviron.local não encontrado")
}
message("🚀 PAIC Econometrics - FAE")
message("📁 Cache: ", Sys.getenv("RENV_PATHS_CACHE"))
', file = ".Rprofile")
cat("✅ .Rprofile criado\n")
cat("\n📝 PRÓXIMO PASSO: Edite .Renviron.local com sua senha real!\n\n")
# ============================================
# CONFIGURAR CREDENCIAIS DO BANCO DE DADOS
# ============================================
# Criar .Renviron.local com as credenciais reais
cat('# .Renviron.local - CREDENCIAIS SENSÍVEIS
# Este arquivo está protegido pelo .gitignore e NÃO será versionado
# === PostgreSQL - CX Analytics ===
CX_HOST=172.23.27.20
CX_PORT=5432
CX_DBNAME=cx_analytics
CX_USER=rodrigo.ozon
CX_PASSWORD=BD^4mxPJ33%4
# IMPORTANTE: Este arquivo NÃO deve estar no Git!
# Está protegido pelo .gitignore
', file = ".Renviron.local")
cat("✅ Credenciais configuradas em .Renviron.local\n")
cat("🔒 Arquivo protegido e NÃO será versionado no Git\n\n")
# Verificar que o arquivo foi criado
if (file.exists(".Renviron.local")) {
cat("✅ Arquivo .Renviron.local criado com sucesso\n")
} else {
cat("❌ Erro ao criar arquivo\n")
}
git status
.rs.restartR()
# Verificar configuração
cat("Cache:", Sys.getenv("RENV_PATHS_CACHE"), "\n")
cat("Database:", Sys.getenv("CX_DBNAME"), "\n")
cat("User:", Sys.getenv("CX_USER"), "\n")
# Status do renv
renv::status()
# RESTAURAR PACOTES
renv::restore()
renv::restore()
install.packages("evaluate")
y
renv::restore()
renv::purge("evaluate")
# Configurar novo cache FORA do OneDrive
cache_local <- "C:/renv_cache_PAIC"
dir.create(cache_local, recursive = TRUE, showWarnings = FALSE)
# Configurar para esta sessão
Sys.setenv(RENV_PATHS_CACHE = cache_local)
# Verificar
cat("Novo cache:", Sys.getenv("RENV_PATHS_CACHE"), "\n")
usethis::edit_r_environ()
install.packages("usethis")
usethis::edit_r_environ()
usethis::edit_r_environ()
file.edit(".Renviron")
# ============================================
# CONFIGURAR CACHE NO ONEDRIVE (SEM SINCRONIZAR)
# ============================================
cat("\n🔧 Configurando cache no OneDrive...\n\n")
# 1. Definir caminho do cache (pasta irmã do projeto)
cache_onedrive <- "C:/Users/Weback/OneDrive - Grupo Marista/FAE Business School/renv_cache_PAIC"
# 2. Criar pasta
dir.create(cache_onedrive, recursive = TRUE, showWarnings = FALSE)
cat("✅ Pasta criada:", cache_onedrive, "\n")
# 3. Configurar para esta sessão
Sys.setenv(RENV_PATHS_CACHE = cache_onedrive)
cat("✅ Cache configurado para esta sessão\n")
# 4. Atualizar .Renviron do projeto
cat('RENV_PATHS_CACHE=C:/Users/Weback/OneDrive - Grupo Marista/FAE Business School/renv_cache_PAIC
', file = ".Renviron")
cat("✅ .Renviron do projeto atualizado\n")
# 5. Atualizar .Renviron do usuário
renviron_user <- path.expand("~/.Renviron")
if (file.exists(renviron_user)) {
content <- readLines(renviron_user)
content <- content[!grepl("RENV_PATHS_CACHE", content)]
content <- c(content, paste0("RENV_PATHS_CACHE=", cache_onedrive))
writeLines(content, renviron_user)
} else {
writeLines(paste0("RENV_PATHS_CACHE=", cache_onedrive), renviron_user)
}
cat("✅ .Renviron do usuário atualizado\n")
# 6. Atualizar .Rprofile para forçar cache
cat('# .Rprofile - PAIC Econometrics
Sys.setenv(RENV_PATHS_CACHE = "C:/Users/Weback/OneDrive - Grupo Marista/FAE Business School/renv_cache_PAIC")
source("renv/activate.R")
if (file.exists(".Renviron.local")) readRenviron(".Renviron.local")
message("🚀 PAIC Econometrics - FAE")
message("📁 Cache: ", Sys.getenv("RENV_PATHS_CACHE"))
', file = ".Rprofile")
cat("✅ .Rprofile atualizado\n")
# 7. Limpar evaluate corrompido
if (dir.exists("renv/library")) {
eval_path <- list.files("renv/library", pattern = "evaluate",
recursive = TRUE, full.names = TRUE, include.dirs = TRUE)
if (length(eval_path) > 0) {
unlink(unique(dirname(eval_path)), recursive = TRUE)
cat("✅ Pacotes corrompidos removidos\n")
}
}
cat("\n⚠️  CRÍTICO - PRÓXIMO PASSO:\n")
cat("═══════════════════════════════════════\n")
cat("ANTES de reiniciar o R, você PRECISA:\n\n")
cat("1. Abrir o File Explorer (Windows Explorer)\n")
cat("2. Navegar até:\n")
cat("   C:\\Users\\Weback\\OneDrive - Grupo Marista\\FAE Business School\\\n")
cat("3. Encontrar a pasta: renv_cache_PAIC\n")
cat("4. Clicar com BOTÃO DIREITO na pasta\n")
cat("5. Escolher: 'Liberar espaço' ou 'Free up space'\n")
cat("   (Isso mantém local mas NÃO sincroniza)\n\n")
cat("Depois disso:\n")
cat("6. Volte aqui e execute: .rs.restartR()\n")
cat("7. Depois: renv::restore()\n\n")
cat("═══════════════════════════════════════\n\n")
.rs.restartR()
# Deve retornar o caminho do OneDrive
Sys.getenv("RENV_PATHS_CACHE")
# Verificar que a pasta existe
dir.exists(Sys.getenv("RENV_PATHS_CACHE"))
# Deve retornar: TRUE
# Remover renv corrompido
remove.packages("renv")
# Instalar renv do CRAN diretamente
install.packages("renv", repos = "https://cloud.r-project.org/")
# Verificar instalação
library(renv)
renv::status()
# Ativar renv no projeto
renv::activate()
# Verificar status
renv::status()
renv::restore()
install.packages("evaluate", dependencies = TRUE)
renv::status()
# Instalar rmarkdown
install.packages("rmarkdown")
# Instalar dependências relacionadas
install.packages(c("knitr", "yaml", "tinytex"))
# Verificar instalação
library(rmarkdown)
packageVersion("rmarkdown")
renv::snapshot()
